// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoupaDevAPI.Context;

#nullable disable

namespace PoupaDevAPI.Migrations
{
    [DbContext(typeof(PoupaDevAPIContext))]
    [Migration("20220915125609_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PoupaDevAPI.Models.ContaObjetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("EstaDeletado")
                        .HasColumnType("bit");

                    b.Property<int>("ObjetivoFinanceiroId")
                        .HasColumnType("int");

                    b.Property<float>("SaldoAnterior")
                        .HasColumnType("real");

                    b.Property<float>("SaldoAtual")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ObjetivoFinanceiroId")
                        .IsUnique();

                    b.ToTable("ContasObjetivos");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.ObjetivoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaDeletado")
                        .HasColumnType("bit");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ValorObjetivo")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ObjetivosFinanceiros");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.OperacaoFinanceira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContaObjetivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstaDeletado")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ContaObjetivoId");

                    b.ToTable("OperacoesFinanceiras");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.ContaObjetivo", b =>
                {
                    b.HasOne("PoupaDevAPI.Models.ObjetivoFinanceiro", "ObjetivoFinanceiro")
                        .WithOne("Conta")
                        .HasForeignKey("PoupaDevAPI.Models.ContaObjetivo", "ObjetivoFinanceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoFinanceiro");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.OperacaoFinanceira", b =>
                {
                    b.HasOne("PoupaDevAPI.Models.ContaObjetivo", "ContaObjetivo")
                        .WithMany("ListaOperacoes")
                        .HasForeignKey("ContaObjetivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaObjetivo");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.ContaObjetivo", b =>
                {
                    b.Navigation("ListaOperacoes");
                });

            modelBuilder.Entity("PoupaDevAPI.Models.ObjetivoFinanceiro", b =>
                {
                    b.Navigation("Conta");
                });
#pragma warning restore 612, 618
        }
    }
}
